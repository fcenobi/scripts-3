#!/bin/bash

set -ex

export DISPLAY=${DISPLAY:-":0.0"}
export XAUTHORITY="$HOME/.Xauthority"

PRIMARY=eDP-1
SECONDARY=DP-2-1
TERTIARY=DP-2-2


case $(sed 's/.*\:[[:space:]]*//' /proc/acpi/button/lid/LID/state) in
	open)
		LID_OPEN=true
		;;
	closed)
		LID_OPEN=false
		;;
	*)
		# Fail safe
		LID_OPEN=true
		;;
esac

case $(cat /sys/devices/platform/dock.0/docked) in
	1)
		echo docked
		DOCKED=true
		;;
	0)
		echo undocked
		DOCKED=false
		;;
	*)
		# Fail safe
		DOCKED=false
		;;
esac



find_displays(){
	xrandr | grep ' connected' | cut -d' ' -f1
}

primary=$PRIMARY
displays=$(find_displays)
# Try to find connected displays every 1 second until one or more are found.
while [[ "$displays" == "" ]]; do
	sleep 1
	displays=$(find_displays)
done

IFS=' ' read -r -a display_array <<< $displays
echo available displays are: ${display_array[*]}
for d in ${display_array[@]}; do
	case $d in
		$PRIMARY)
			primary=$PRIMARY
			;;
		$SECONDARY)
			secondary=$SECONDARY
			;;
		$TERTIARY)
			tertiary=$TERTIARY
			;;
		*)
			other=$d
			;;
	esac
done



if [[ -n $primary ]] && [[ -z $secondary ]] && [[ -z $tertiary ]]; then
	echo Just primary: $primary
	xprofile activate undocked
elif [[ -n $primary ]] && [[ -n $other ]]; then
	echo Primary $primary and another random display $other
	xrandr --output $other --auto
	xrandr --output $other --right-of $primary
elif [[ -z $primary ]] && [[ -n $secondary ]] && [[ -n $tertiary ]]; then
	echo Lid closed both external displays connected $secondary $tertiary
	xprofile activate docked
elif [[ -n $primary ]] && [[ -n $secondary ]] && [[ -n $tertiary ]]; then
	echo All 3 connected $primary $secondary $tertiary
	xprofile activate docked-open
elif ! $DOCKED; then
	xprofile activate undocked
else
	xrandr --auto
fi
