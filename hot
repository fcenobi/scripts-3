#!/bin/bash

UP="up"
DOWN="down"
ACTION=${ACTION:=$UP}
WAN=${WAN:=eth0}
LAN=${LAN:=wlan0}
LAN_IPADDR=172.16.0.1
DHCP_START=${DHCP_START:=100}
DHCP_END=${DHCP_END:=200}
DHCP_LEASE=${DHCP_LEASE:=3600}

print_usage() {
	cat - <<-EOF
hot -o <wan interface> -i <lan interface> -u -d -l -w
	defaults are "lan up eth0"
	eg: hot . down == hot lan down eth0
	EOF
}

am_root(){
	if [[ `whoami` != "root" ]] ;then
		echo "Must be root to execute!"
		exit 1
	fi
}

iptables_rules_up(){
	/usr/sbin/iptables -t nat -A POSTROUTING -o $LAN -j MASQUERADE || return 1
	/usr/sbin/iptables -A FORWARD -i $LAN -o $WAN -j ACCEPT || return 1
	return 0
}

iptables_rules_down(){
	/usr/sbin/iptables -t nat -D POSTROUTING -o $LAN -j MASQUERADE || return 1
    /usr/sbin/iptables -D FORWARD -i $LAN -o $WAN -j ACCEPT || return 1
	return 0
}

_forwarding(){
	if [[ $ACTION == $UP ]] ;then
		val=1
	else
		val=0
	fi

	# ensure ipv4 forwarding set
	sysctl net.ipv4.ip_forward=$val || return 1
	# ensure ipv6 forwarding set
	sysctl -w net.ipv6.conf.all.forwarding=$val || return 1

	return 0
}

_iface(){
	if [[ $ACTION == $UP ]] ;then
	    echo -n "loading interface ..."
	else
		echo -n "putting interfaces down ..."
	fi

	if ( ifconfig $LAN $ACTION ) && ( ifconfig $WAN $ACTION ) ;then
		echo "they is $ACTION now"
	else
		echo "failed to $ACTION interfaces"
		return 1
	fi
	return 0
}

_dnsmasq(){
	if [[ $ACTION == $UP ]] ;then
		echo -n "running dnsmasq ..."
		dnsmasq --interface=$LAN --dhcp-range="$DHCP_START,$DHCP_END,$DHCP_LEASE" || ( echo "failed to start dnsmasq" && return 1 )
	else
		echo -n "running dnsmasq ..."
		killall -w dnsmasq || ( echo "failed to kill dnsmasq" && return 1 )
	fi
	return 0
}

_iptables(){
	if [[ $ACTION == $UP ]] ;then
		echo -n "loading iptables rules ..."
		iptables_rules_up  || ( echo "failed to set iptables rules" && return 1 )
	else
		echo -n "removing iptables rules ..."
		iptables_rules_down || ( echo "failed to remove iptables rules" && return 1 )
	fi
	return 0
}

hot(){
	#am_root
	_forwarding
	_iface
	_dnsmasq
	_iptables
}

# handle args
handle_args(){
	index=0
	while getopts "hi:o:udlw" OPTION ; do
		case $OPTION in
			h)
				print_usage
				return 1
				;;
			i)
				LAN=$OPTARG
				;;
			o)
				WAN=$OPTARG
				;;
			u)
				ACTION=$UP
				;;
			d)
				ACTION=$DOWN
				;;
			l)
				LAN=$LAN
				WAN=$WAN
				;;
			w)
				lan_orig=$LAN
				LAN=$WAN
				WAN=$lan_orig
				;;
			*)
				print_usage
				return 1
				;;
		esac
	done
	return 0
}

if handle_args ;then
	hot
fi
