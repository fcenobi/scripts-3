#!/bin/sh
# rc.appname - Initscript that starts appname
#	desc

# AUTHORS:
#	Haxwithaxe <me at haxwithaxe dot net>

# TODO:

# Variables
USER="FIXME"
RUNDIR="."
PIDFILE="/var/run/appname.pid"
APPEXEC=""

invert_retcode(){
	if [ $1 -eq 0 ] ;then
		return 1
	else
		return 0
	fi
}

## Core code.
# Here's where the heavy lifting happens - this parses the arguments passed to
# script and triggers what has to be triggered.
##
appname_start(){
    # Start appname.
	cd $RUNDIR
	/bin/su -c "$APPEXEC --pid-file=$PIDFILE &" $USER
	return appname_status
}

appname_stop(){
	# Terminate appname.
	kill `cat $PIDFILE`
	rm -f $PIDFILE
	# status returns 1 when service is stopped so it needs to be inverted
	retcode=appname_status
	return invert_retcode $retcode
}

appname_status(){
	echo -n 'appname is ... '
	if [ -f $PIDFILE ] ;then
		# the file is there but is the pid there
		if ps axo pid | grep -q `head $PIDFILE` ;then
			echo 'running.'
			return 0
		else
			echo "stopped, but it's PID file ($PIDFILE) still exists."
			return 1
		fi
	else
		echo "stopped."
		return 1
	fi
}

# handle args
retcode=0 # default return code
case "$1" in
	'start')
		retcode=appname_start
		;;
	'stop')
		retcode=appname_stop
		;;
	'restart')
		retcode0=appname_stop
		retcode1=appname_start
		retcode=$(($retcode0 + $retcode1))
		;;
	'status')
		retcode=appname_status
		;;
	*)
		echo "USAGE: $0 {start|stop|restart|status}"
		retcode=1
		;;
esac
exit $retcode

# End of script.
